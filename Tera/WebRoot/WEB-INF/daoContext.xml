<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jee="http://www.springframework.org/schema/jee" 
    xsi:schemaLocation="
    	http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
		http://www.springframework.org/schema/tx  
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
		http://www.springframework.org/schema/aop  
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
		指定Bean扫描的包，多个包逗号隔开，任何标注了@Component，@Controller，@Service，@Repository的类，都会被自动识别为bean。	
	-->
	
	<!-- 此处扫描和DAO相关的Bean
	<context:component-scan base-package="com.tera.sys.service,com.tera.creditEase.service" />
	 -->
	<context:component-scan base-package="com.tera">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/> 
	</context:component-scan>
	
	<!-- 启用自动装配 -->
	<context:annotation-config />
	
<!-- 	AOP 规则引擎使用 -->
	<aop:aspectj-autoproxy/>
	
	<!-- spring 监控 -->
	<bean id="druid-stat-interceptor"
		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
	</bean>

	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
	    scope="prototype">
	    <property name="patterns">
	        <list>
	            <value>com.*.service.*</value>
	            <value>com.*.dao.*</value>
	        </list>
	    </property>
	</bean>
	
	<aop:config>
	    <aop:advisor advice-ref="druid-stat-interceptor"
	        pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	
	
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/hdDataSource" />
	<jee:jndi-lookup id="dataSource" jndi-name="java:jdbc/teraDataSource" />  -->
	

<!--  	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/hedao" />  -->
	<!-- 
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://182.92.77.38:3306/tera</value>			
			</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>root123</value>
		</property>
	</bean>
	 -->
	<!-- Druid 监控统计 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="url">
			<value>jdbc:mysql://localhost:3306/tera</value>
		</property>
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value>root123</value>
		</property>
		<property name="filters" value="stat" />
	</bean>
 	
	<!-- 声明事务管理器	-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 声明事务管理器
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager" />
	-->
	
	<!-- 创建 SqlSessionFactory	-->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="plugins">
			<list>
				<bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
					<property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"></property>
				</bean>
			</list>
		</property>
	</bean>


	<!-- 扫描mappers并让他们自动装配	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"  value="com.tera" />
	</bean>
	
	<!-- 启用注解驱动的声明事务支持 -->
	<tx:annotation-driven />

</beans>
