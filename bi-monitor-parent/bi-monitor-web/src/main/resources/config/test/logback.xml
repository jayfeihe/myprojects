<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!-- scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位， 
	默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- 每个logger都关联到logger上下文，默认上下文名称为“default”。 但可以使用<contextName>设置成其他名字， 
		用于区分不同应用程序的记录。一旦设置，不能修改。 -->
	<contextName>monitor</contextName>
	<!-- 定义日志文件 输入位置 -->
	<property name="LOG_DIR" value="/logs/monitor" />
	<!-- 程序打印级别 -->
	<property name="LOG.LEVEL" value="DEBUG" />
	<!-- 日志最大的历史 30天 -->
	<property name="maxHistory" value="30" />

	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- 对日志进行格式化 -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -%msg%n
			</pattern>
		</encoder>
	</appender>

	<!-- 错误日志 -->
	<appender name="ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<!-- 最常用的滚动策略，它根据时间来制定滚动策略.既负责滚动也负责触发滚动 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/error-log.log
			</fileNamePattern>
			<!-- <maxHistory>${maxHistory}</maxHistory> -->
		</rollingPolicy>
		<!-- 输出格式 -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger -
				%msg%n</pattern>
		</encoder>
	</appender>

	<!-- 普通日志 appender -->
	<appender name="COMMON"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 过滤器，排除ERROR级别的日志 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>DENY</onMatch>
			<onMismatch>ACCEPT</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_DIR}/%d{yyyy-MM-dd}/common-log.log
			</fileNamePattern>
			<!-- 日志最大的历史 -->
			<!-- <maxHistory>${maxHistory}</maxHistory> -->
		</rollingPolicy>
		<!-- 输出格式 -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger -
				%msg%n</pattern>
		</encoder>
	</appender>

	<!-- 异步输出COMMON日志 -->
	<appender name="ASYNC_COMMON" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<includeCallerData>true</includeCallerData>
		<appender-ref ref="COMMON" />
	</appender>

	<root level="${LOG.LEVEL}">
		<appender-ref ref="STDOUT" />
		<!-- 文件输出 -->
		<appender-ref ref="ERROR" />
		<appender-ref ref="ASYNC_COMMON" />
	</root>
</configuration>
